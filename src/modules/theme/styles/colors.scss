/* It's a map of maps. The outer map has three keys: light, dark, and default. Each of those keys has a
map as its value. The inner maps have keys like background, bottom, button, etc. and each of those
keys has a color as its value. */
$themes: (
    light: (
        background: #F1F1F1,
        bottom: #D8D8D8,
        button: #5A3D86,
        buttonDark: #3B2758,
        card: #F1F1F1,
        contentHeader: #FFFFFF,
        focus: #D8981A,
        header: #D8D8D8,
        headerText: #1C1C1C,
        icon: #4F4F4F,
        inputText: #4A4A4A,
        linkText: #496DA7,
        modal: #F1F1F1,
        modalText: #000000,
        navbar: #FFFFFF,
        text: #000000,
        titleSecondary: #5A7475,
        titleText: #292929,
    ),

    dark: (
        background: #000000,
        bottom: #292929,
        button: #C0A7E1,
        buttonDark: #9C85B9,
        card: #292929,
        contentHeader: #121212,
        focus: #D8981A,
        header: #292929,
        headerText: #FFFFFF,
        icon: #BFBFBF,
        inputText: #FFFFFF,
        linkText: #A0B9E2,
        modal: #292929,
        modalText: #B4B4B4,
        navbar: #000000,
        text: #FFFFFF,
        titleSecondary: #93A8AB,
        titleText: #FFFFFF,
    ),

    default: (
        background: transparent,
        bottom: transparent,
        button: transparent,
        buttonDark: transparent,
        card: transparent,
        contentHeader: transparent,
        focus: transparent,
        header: transparent,
        headerText: transparent,
        icon: transparent,
        inputText: transparent,
        linkText: transparent,
        modal: transparent,
        modalText: transparent,
        navbar: transparent,
        text: transparent,
        titleSecondary: transparent,
        titleText: transparent,
    )
);

/* It's a mixin that takes a map as an argument. It loops through the map and creates a new map for
each key in the map. It then loops through the new map and creates a new map for each key in the new
map. It then loops through the new map and creates a new map for each key in the new map. It then
loops through the new map and creates a new map for each key in the new map. It then loops through
the new map and creates a new map for each key in the new map. It then loops through the new map and
creates a new map for each key in the new map. It then loops through the new map and creates a new
map for each key in the new map. It then loops through the new map and creates a new map for each
key in the new map. It then loops through the new map and creates a new map for each key in the new
map. It then loops through the new map and creates a new map for each key in the new map. It then
loops through the new map and creates a new map for each key in the new map. It then loops through
the new map and creates a */
@mixin themify($themes) {
    @each $theme, $map in $themes {
        .theme-#{$theme} & {
            $theme-map: () !global;

            @each $key, $submap in $map {
                $value: map-get(map-get($themes, $theme), '#{$key}');
                $theme-map: map-merge(
                    $theme-map,
                    (
                        $key: $value,
                    )
                ) !global;
            }

            @content;
            $theme-map: null !global;
        }
    }
}

/* It's a function that takes a key as an argument. It returns the value of the key in the map. */
@function themed($key) {
    @return map-get($theme-map, $key);
}